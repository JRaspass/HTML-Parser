ISSUES FOR THE 3.0 RELEASE

  - Should we rename 'process'?     (candidates: 'pi', 'proc',...)
  - Should token0 go away? No!
  - Should we report tokens for 'text'?  If all you want is to know
    the length of a text segment, then 'tokenpos' could be used instead
    of asking for 'text' and then applying length($text).
  - Should some '\n' be part of markup instead of text.  The SGML standard
    has a few things to say about this.  A '\n' following a start tag should
    be considered part of that tag.  A '\n' preceeding an end tag should
    be part of that tag and not part of the text flow. According to
    '../html4.0.1/appendix/notes.html#h-B.3.1'  Problematic when NL sometimes
    is \r\n and sometimes just \r (from Mac servers)
  - Should there be a way to get both types of quotes into the same
    literal strings in argspec (need some kind of escaping).


FEATURES THAT CAN WAIT

 - official interface to $self->{parse_file_stop}
 - remove 255 char limit on literal strings in argspec
 - report 'line'
 - unbroken_text option
 - utf8 mode (where entities expand to utf8 chars instead of latin1 chars)
 - <![%app1;[...]]> (parameter entities)
 - $p->ignore_element("script", "style");
 - $p->ignore_tag("font", "big", "small");
 - "IGNORE" as handler destination (similar to $SIG{IGNORE}) might
   be more efficient than 'sub {}'  Empty string as handler is a
   nice way to do it I think.  $p->handler(start => "");
 - limit memory use of markup that never ends.   Perhaps by have
   configuable limits on the length that markup can have and still
   be recongnized.
 - pic attribute (">" or "?>" are defaults)  useful where you want to
   have "?>" as pic, but don't want the rest of xml_mode. For instance
   to parse PHP files.


SGML FEATURES WE WILL PROBABLY IGNORE FOREVER
 - Empty tags: <> </>  (repeat previous start tag)
 - <foo<bar>  (same as <foo><bar>)
 - NET tags <name/.../
 

POSSIBLE OPTIMIZATIONS
 - none that I can think of right now
 - run the profiler


MINOR "BUGS" (alias FEATURES)
 - no way to clear "boolean_attribute_value".
 - <plaintext> ends with </plaintext> and can't be escaped.
 - <style> and <script> do not end with the first "</".
